diff --git a/src/utils/matterNormalization.ts b/src/utils/matterNormalization.ts
index 3c362818ebede014261fbecf393c60927eac7904..db31a60147dba75fd480f5bdf52a467b763886b4 100644
--- a/src/utils/matterNormalization.ts
+++ b/src/utils/matterNormalization.ts
@@ -17,51 +17,67 @@ function namesMatch(name1: string, name2: string): boolean {
     'lukasz': ['luke', 'lucas'],
     'luke': ['lukasz', 'lucas'],
     'lucas': ['luke', 'lukasz'],
     'samuel': ['sam'],
     'sam': ['samuel'],
     'alexander': ['alex'],
     'alex': ['alexander'],
     'william': ['will', 'bill'],
     'will': ['william'],
     'bill': ['william'],
     'robert': ['rob', 'bob'],
     'rob': ['robert'],
     'bob': ['robert'],
     'michael': ['mike'],
     'mike': ['michael'],
     'christopher': ['chris'],
     'chris': ['christopher'],
     'elizabeth': ['liz', 'beth'],
     'liz': ['elizabeth'],
     'beth': ['elizabeth']
   };
   
   // Split names into parts (first name, last name)
   const n1Parts = n1.split(' ');
   const n2Parts = n2.split(' ');
-  
+
+  // If either name lacks a last name, fall back to first-name comparison with variations
+  if (n1Parts.length < 2 || n2Parts.length < 2) {
+    const firstName1 = n1Parts[0];
+    const firstName2 = n2Parts[0];
+
+    if (firstName1 === firstName2) return true;
+
+    const variations1 = nameVariations[firstName1] || [];
+    const variations2 = nameVariations[firstName2] || [];
+    if (variations1.includes(firstName2) || variations2.includes(firstName1)) {
+      return true;
+    }
+
+    return false;
+  }
+
   // Check if first names match (with variations) and last names match
   if (n1Parts.length >= 2 && n2Parts.length >= 2) {
     const firstName1 = n1Parts[0];
     const lastName1 = n1Parts[n1Parts.length - 1];
     const firstName2 = n2Parts[0];
     const lastName2 = n2Parts[n2Parts.length - 1];
     
     // Last names must match exactly
     if (lastName1 === lastName2) {
       // Check if first names match or are variations
       if (firstName1 === firstName2) return true;
       
       // Check variations
       const variations1 = nameVariations[firstName1] || [];
       const variations2 = nameVariations[firstName2] || [];
       
       if (variations1.includes(firstName2) || variations2.includes(firstName1)) {
         return true;
       }
     }
   }
   
   return false;
 }
 
