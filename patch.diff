diff --git a/src/tabs/enquiries/pitch-builder/EmailPreview.tsx b/src/tabs/enquiries/pitch-builder/EmailPreview.tsx
index 96cfa80de297671373ef38688395aa4482fef2ce..e8cce4b3cc8231e7c7f1bc705cfc0ab5b5e176b4 100644
--- a/src/tabs/enquiries/pitch-builder/EmailPreview.tsx
+++ b/src/tabs/enquiries/pitch-builder/EmailPreview.tsx
@@ -1,48 +1,48 @@
 import React from 'react';
 import {
   Stack,
   Text,
   MessageBar,
   MessageBarType,
   Separator,
   Panel,
   PanelType,
   PrimaryButton,
   DefaultButton,
   Checkbox,
   IconButton,
   mergeStyles,
 } from '@fluentui/react';
 import { colours } from '../../../app/styles/colours';
 import {
   sharedPrimaryButtonStyles,
   sharedDefaultButtonStyles,
   sharedDraftConfirmedButtonStyles,
 } from '../../../app/styles/ButtonStyles';
 import { componentTokens } from '../../../app/styles/componentTokens';
-import greyHelix from '../../../assets/grey helix mark.png';
+import markWhite from '../../../assets/markwhite.svg';
 import {
   removeHighlightSpans,
   markUnfilledPlaceholders,
   removeUnfilledPlaceholders,
   applyDynamicSubstitutions,
   convertDoubleBreaksToParagraphs,
 } from './emailUtils';
 import ExperimentalAssistant from './ExperimentalAssistant';
 import { isInTeams } from '../../../app/functionality/isInTeams';
 import { TemplateBlock } from '../../../app/customisation/ProductionTemplateBlocks';
 
 function escapeRegExp(str: string): string {
   return str.replace(/[.*+?^${}()|[\]\\]/g, '\\$&');
 }
 
 function removeAutoInsertedBlocks(
   html: string,
   autoBlocks: { [key: string]: boolean },
   editedBlocks: { [key: string]: boolean }
 ): string {
   let result = html;
   Object.keys(autoBlocks).forEach((title) => {
     if (!autoBlocks[title]) return;
     if (editedBlocks[title]) return;
     const escaped = escapeRegExp(title);
diff --git a/src/tabs/enquiries/pitch-builder/EmailPreview.tsx b/src/tabs/enquiries/pitch-builder/EmailPreview.tsx
index 96cfa80de297671373ef38688395aa4482fef2ce..e8cce4b3cc8231e7c7f1bc705cfc0ab5b5e176b4 100644
--- a/src/tabs/enquiries/pitch-builder/EmailPreview.tsx
+++ b/src/tabs/enquiries/pitch-builder/EmailPreview.tsx
@@ -151,53 +151,53 @@ const previewRef = React.useRef<HTMLDivElement>(null);
     '30_days': '30 days',
   };
 
 function formatCurrency(val?: string): string {
   if (!val) return 'N/A';
   const num = parseFloat(val.replace(/,/g, ''));
   if (isNaN(num)) return val;
   return num.toLocaleString('en-GB', {
     style: 'currency',
     currency: 'GBP',
     minimumFractionDigits: 2,
   });
 }
 
   const subjectBannerClass = mergeStyles('subject-banner', {
     background: componentTokens.infoBanner.background,
     borderLeft: componentTokens.infoBanner.borderLeft,
     padding: componentTokens.infoBanner.padding,
     fontSize: '0.875rem',
     fontWeight: 600,
   });
 
   const panelStyles = {
     padding: '12px',
     backgroundColor: colours.light.previewBackground,
-    backgroundImage: `linear-gradient(rgba(255,255,255,0.85), rgba(255,255,255,0.85)), url(${greyHelix})`,
+    backgroundImage: `linear-gradient(rgba(255,255,255,0.85), rgba(255,255,255,0.85)), url(${markWhite})`,
     backgroundRepeat: 'no-repeat',
-    backgroundPosition: 'center 80px',
+    backgroundPosition: 'calc(100% - 40px) 30px',
     backgroundSize: '70%',
     color: colours.light.text,
     display: 'flex',
     flexDirection: 'column',
     height: '100%',
   } as const;
 
   return (
     <Panel
       isOpen={isPreviewOpen}
       onDismiss={onDismiss}
       type={PanelType.custom}
       customWidth="600px"
       hasCloseButton={false}
       styles={{
         main: panelStyles,
         commands: { display: 'none' },
       }}
     >
       <Stack tokens={{ childrenGap: 10 }} styles={{ root: { flex: 1 } }}>
         {/* Header with close button */}
         <Stack tokens={{ childrenGap: 4 }}>
           <Stack
             horizontal
             verticalAlign="center"
