diff --git a/src/tabs/enquiries/pitch-builder/emailUtils.ts b/src/tabs/enquiries/pitch-builder/emailUtils.ts
index f6964bb0f637dc90d64ecc6489d169492c852d06..42a0ef33525c5f6ad2881969cf3b7b9f1e6b4847 100644
--- a/src/tabs/enquiries/pitch-builder/emailUtils.ts
+++ b/src/tabs/enquiries/pitch-builder/emailUtils.ts
@@ -371,48 +371,48 @@ export function applyDynamicSubstitutions(
   instructionsLink?: string
 ): string {
   const userInitials = userData?.[0]?.['Initials'] || 'XX';
   const enquiryID = enquiry?.ID || '0000';
   const userRole = userData?.[0]?.['Role'] || '[Position]';
   const userRate = userData?.[0]?.['Rate']; // This is the raw rate value from SQL
   // Format the rate to include the pound symbol and " + VAT"
   const formattedRate =
     userRate && userRate !== '[Rate]' ? `£${userRate} + VAT` : '[Rate]';
 
   const formattedAmount =
     amount !== undefined && amount !== null && amount !== ''
       ? (() => {
           const num = Number(amount);
           if (isNaN(num)) return '[Amount]';
           const withDecimals = num.toLocaleString('en-GB', {
             minimumFractionDigits: 2,
             maximumFractionDigits: 2,
           });
           return `£${withDecimals.replace(/\.00$/, '')}`;
         })()
       : '[Amount]';
 
   // Prefer provided instructionsLink. Otherwise, if we have passcode and enquiry ID, include both.
   // Fallbacks maintain older behavior.
-  const baseUrl = process.env.REACT_APP_INSTRUCTIONS_URL || '#';
+  const baseUrl = process.env.REACT_APP_INSTRUCTIONS_URL || 'https://helix-law.co.uk/proof-of-identity/';
   const finalInstructionsLink = instructionsLink
     || (passcode && enquiry?.ID
       ? `${baseUrl}?deal=${encodeURIComponent(String(enquiry.ID))}&token=${encodeURIComponent(String(passcode))}`
       : passcode
         ? `${baseUrl}?passcode=${encodeURIComponent(String(passcode))}`
         : baseUrl);
 
   // Prebuild the anchor used in HTML previews/emails
   const instructAnchor = `<a href="${finalInstructionsLink}" target="_blank" rel="noopener noreferrer">Instruct Helix Law</a>`;
 
   return text
   // Support explicit marker syntax used in editor content
   .replace(/\[\[INSTRUCT_LINK::[^\]]*\]\]/gi, instructAnchor)
     .replace(/\[FE\]/g, userInitials)
     .replace(/\[ACID\]/g, enquiryID)
     .replace(/\[Position\]/g, userRole)
     .replace(/\[Rate\]/g, formattedRate)
     .replace(/\[Amount\]/g, formattedAmount)
     .replace(/\[Passcode\]/g, passcode || '[Passcode]')
   // Render a human-friendly hyperlink instead of a raw URL
   .replace(/\[InstructLink\]/g, instructAnchor);
 }
