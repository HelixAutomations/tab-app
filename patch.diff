diff --git a/src/app/functionality/BespokePanel.tsx b/src/app/functionality/BespokePanel.tsx
index be16de00618d81c23398151a5d521cd0034c2da0..4dc2e69b66132afcda354f9cc982bf26fb7baaff 100644
--- a/src/app/functionality/BespokePanel.tsx
+++ b/src/app/functionality/BespokePanel.tsx
@@ -3,82 +3,91 @@
 
 import React, { ReactNode, useEffect, useRef, useState } from 'react';
 import { IconButton, Text } from '@fluentui/react';
 import { mergeStyles } from '@fluentui/react';
 import '../../app/styles/bespokePanel.css'; // Ensure the path is correct
 
 interface BespokePanelProps {
   isOpen: boolean;
   onClose: () => void;
   title: string;
   children: ReactNode;
   width?: string; // Optional: for dynamic width
   offsetTop?: number; // Optional: offset from top to avoid overlapping nav
 }
 
 const getOverlayStyle = (offsetTop: number) =>
   mergeStyles({
     position: 'fixed',
     top: offsetTop,
     left: 0,
     width: '100vw',
     height: `calc(100vh - ${offsetTop}px)`,
     backgroundColor: 'rgba(0, 0, 0, 0.5)',
     display: 'flex',
     justifyContent: 'flex-end', // Align panel to the right
-    zIndex: 1000,
+    // Place below navigation components (z-index 900+) but above page content
+    zIndex: 850,
     transition: 'opacity 0.3s ease',
   });
 
 const getPanelStyle = (width: string, closing: boolean) =>
   mergeStyles({
     backgroundColor: '#fff',
     width: width || '1600px', // Default width doubled
     maxWidth: '100%', // Responsive
     height: '100%',
     boxShadow: '-2px 0 8px rgba(0,0,0,0.3)',
     display: 'flex',
     flexDirection: 'column',
     animation: closing ? 'slideOut 0.3s forwards' : 'slideIn 0.3s forwards',
     position: 'relative',
   });
 
 const headerStyle = mergeStyles({
   padding: '16px 24px',
   borderBottom: '1px solid #e1e1e1',
   display: 'flex',
   justifyContent: 'space-between',
   alignItems: 'center',
 });
 
 const contentStyle = mergeStyles({
   padding: '20px',
   overflowY: 'auto',
   flexGrow: 1,
 });
 
-const BespokePanel: React.FC<BespokePanelProps> = ({ isOpen, onClose, title, children, width, offsetTop = 0 }) => {
+// Default offsetTop keeps the panel below the top navigation and pivot
+const BespokePanel: React.FC<BespokePanelProps> = ({
+  isOpen,
+  onClose,
+  title,
+  children,
+  width,
+  offsetTop = 96,
+}) => {
   const panelRef = useRef<HTMLDivElement>(null);
   const [closing, setClosing] = useState<boolean>(false);
 
   useEffect(() => {
     if (isOpen && panelRef.current) {
       panelRef.current.focus();
     }
   }, [isOpen]);
 
   const handleClose = () => {
     setClosing(true);
     // Wait for the animation to finish before calling onClose
     setTimeout(() => {
       setClosing(false);
       onClose();
     }, 300); // Duration should match the CSS animation duration
   };
 
   if (!isOpen && !closing) return null;
 
   return (
     <div className={getOverlayStyle(offsetTop)} onClick={handleClose} aria-modal="true" role="dialog">
       <div
         className={getPanelStyle(width || '1600px', closing)}
         onClick={(e) => e.stopPropagation()} // Prevent closing when clicking inside the panel
