diff --git a/decoupled-functions/fetchSnippetEdits/index.js b/decoupled-functions/fetchSnippetEdits/index.js
index 8562a826b7d3121f5f0339e555cdea1c41234942..9cebfcbc005bff153ac5bb1b446e3bd05e0be644 100644
--- a/decoupled-functions/fetchSnippetEdits/index.js
+++ b/decoupled-functions/fetchSnippetEdits/index.js
@@ -18,58 +18,61 @@ async function ensureDbPassword() {
     if (!passwordPromise) {
         const secretName = process.env.DB_PASSWORD_SECRET || 'instructionsadmin-password';
         passwordPromise = secretClient.getSecret(secretName).then(s => {
             process.env.DB_PASSWORD = s.value;
             return s.value;
         });
     }
     return passwordPromise;
 }
 
 module.exports = async function (context, req) {
     context.log('fetchSnippetEdits function invoked');
 
     if (req.method !== 'POST') {
         context.res = { status: 405, body: 'Method not allowed' };
         return;
     }
 
     const body = req.body || {};
     if (body.action !== 'getSnippetEdits') {
         context.res = { status: 400, body: 'Invalid action' };
         return;
     }
 
     try {
+        context.log('Ensuring database password');
         await ensureDbPassword();
         const pool = await getSqlPool();
+        context.log('SQL pool acquired, executing query');
 
         const result = await pool.request().query(`
       SELECT
         e.EditId AS id,
         b.Title AS blockTitle,
         e.ProposedContent AS proposedText,
         e.ProposedLabel AS proposedLabel,
         e.ProposedSortOrder AS proposedSortOrder,
         e.ProposedBlockId AS proposedBlockId,
         e.IsNew AS isNew,
         e.ProposedBy AS submittedBy,
         e.ReviewNotes AS reviewNotes,
         e.Status AS status
       FROM SnippetEdits e
       JOIN SimplifiedBlockSnippets s ON e.SnippetId = s.SnippetId
       JOIN SimplifiedBlocks b ON s.BlockId = b.BlockId
       WHERE e.Status = 'pending'
       ORDER BY e.EditId
     `);
 
         const edits = result.recordset || [];
+        context.log(`Query returned ${edits.length} edits`);
         context.res = {
             status: 200,
             body: JSON.stringify(edits),
             headers: { 'Content-Type': 'application/json' }
         };
     } catch (err) {
         context.log.error('fetchSnippetEdits error', err);
         context.res = { status: 500, body: 'Failed to fetch snippet edits' };
     }
 };
