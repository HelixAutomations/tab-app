diff --git a/src/tabs/enquiries/pitch-builder/EmailPreview.tsx b/src/tabs/enquiries/pitch-builder/EmailPreview.tsx
index cff38798e6ec9a067d55f59fb7c534226ad159f1..7df4a53c756021884f026fc48610eb42820900cc 100644
--- a/src/tabs/enquiries/pitch-builder/EmailPreview.tsx
+++ b/src/tabs/enquiries/pitch-builder/EmailPreview.tsx
@@ -11,50 +11,52 @@ import {
   DefaultButton,
   Checkbox,
   IconButton,
   mergeStyles,
   Link,
 } from '@fluentui/react';
 import { colours } from '../../../app/styles/colours';
 import {
   sharedPrimaryButtonStyles,
   sharedDefaultButtonStyles,
 // invisible change
   sharedDraftConfirmedButtonStyles,
 } from '../../../app/styles/ButtonStyles';
 import { componentTokens } from '../../../app/styles/componentTokens';
 import markWhite from '../../../assets/markwhite.svg';
 import {
   removeHighlightSpans,
   markUnfilledPlaceholders,
   removeUnfilledPlaceholders,
   applyDynamicSubstitutions,
   convertDoubleBreaksToParagraphs,
 } from './emailUtils';
 import ExperimentalAssistant from './ExperimentalAssistant';
 import { isInTeams } from '../../../app/functionality/isInTeams';
 import { TemplateBlock } from '../../../app/customisation/ProductionTemplateBlocks';
+import ReactDOMServer from 'react-dom/server';
+import EmailSignature from '../EmailSignature';
 
 function escapeRegExp(str: string): string {
   return str.replace(/[.*+?^${}()|[\]\\]/g, '\\$&');
 }
 
 function removeAutoInsertedBlocks(
   html: string,
   autoBlocks: { [key: string]: boolean },
   editedBlocks: { [key: string]: boolean }
 ): string {
   let result = html;
   Object.keys(autoBlocks).forEach((title) => {
     if (!autoBlocks[title]) return;
     if (editedBlocks[title]) return;
     const escaped = escapeRegExp(title);
     const regex = new RegExp(
       `<!--START_BLOCK:${escaped}-->[\\s\\S]*?<!--END_BLOCK:${escaped}-->`,
       'g'
     );
     result = result.replace(regex, '');
   });
   return result;
 }
 
 interface EmailPreviewProps {
diff --git a/src/tabs/enquiries/pitch-builder/EmailPreview.tsx b/src/tabs/enquiries/pitch-builder/EmailPreview.tsx
index cff38798e6ec9a067d55f59fb7c534226ad159f1..7df4a53c756021884f026fc48610eb42820900cc 100644
--- a/src/tabs/enquiries/pitch-builder/EmailPreview.tsx
+++ b/src/tabs/enquiries/pitch-builder/EmailPreview.tsx
@@ -106,50 +108,60 @@ const EmailPreview: React.FC<EmailPreviewProps> = ({
   isDraftConfirmed,
   amount,
   passcode,
 }) => {
   // Strip blocks auto inserted by the system unless edited
   // Disabled for now since we want content to display by default
   const withoutAutoBlocks = body;
   
   // Generate checkout URL first
   const checkoutPreviewUrl = passcode && enquiry?.ID
     ? `https://instruct.helix-law.com/pitch/${enquiry.ID}-${passcode}`
     : '#';
   
   // Process body HTML using imported functions
   const sanitized = removeHighlightSpans(withoutAutoBlocks);
   const substituted = applyDynamicSubstitutions(
     sanitized,
     userData,
     enquiry,
     amount,
     passcode,
     checkoutPreviewUrl
   );
   const highlightedBody = markUnfilledPlaceholders(substituted, templateBlocks);
   const finalBody = convertDoubleBreaksToParagraphs(highlightedBody);
+  const wrappedBody = `<table width="100%" border="0" cellpadding="0" cellspacing="0" style="border-collapse:collapse;">
+    <tr>
+      <td style="padding:10px; font-family:Raleway, sans-serif; font-size:10pt; color:#000;">
+        ${finalBody}
+      </td>
+    </tr>
+  </table>`;
+  const previewHtml = ReactDOMServer.renderToStaticMarkup(
+    <EmailSignature bodyHtml={wrappedBody} userData={userData} />
+  );
 const previewRef = React.useRef<HTMLDivElement>(null);
 
   const [isAiOpen, setIsAiOpen] = React.useState(false);
   const [isConfirmed, setIsConfirmed] = React.useState(false);
   React.useEffect(() => {
     if (isPreviewOpen) {
       setIsConfirmed(false);
     }
   }, [isPreviewOpen]);
   const inTeams = isInTeams();
   const useLocalData =
     process.env.REACT_APP_USE_LOCAL_DATA === 'true' || !inTeams;
   const allowedInitials = ['LZ', 'AC'];
   const userInitials = userData?.[0]?.Initials?.toUpperCase() || '';
   const canUseAi = useLocalData || allowedInitials.includes(userInitials);
   const showAiAssistButton = false;
 
   // Example follow-up options (you may wish to pass these in or centralise them)
   const followUpOptions: { [key: string]: string } = {
     '1_day': '1 day',
     '2_days': '2 days',
     '3_days': '3 days',
     '7_days': '7 days',
     '14_days': '14 days',
     '30_days': '30 days',
diff --git a/src/tabs/enquiries/pitch-builder/EmailPreview.tsx b/src/tabs/enquiries/pitch-builder/EmailPreview.tsx
index cff38798e6ec9a067d55f59fb7c534226ad159f1..7df4a53c756021884f026fc48610eb42820900cc 100644
--- a/src/tabs/enquiries/pitch-builder/EmailPreview.tsx
+++ b/src/tabs/enquiries/pitch-builder/EmailPreview.tsx
@@ -167,51 +179,50 @@ function formatCurrency(val?: string): string {
 }
 
   const subjectBannerClass = mergeStyles('subject-banner', {
     background: '#f8f9fa',
     border: '1px solid #e8eaed',
     borderRadius: '4px',
     padding: '12px 16px',
     fontSize: '14px',
     fontWeight: 600,
     color: '#0078d4',
     margin: '0 16px',
     boxShadow: '0 1px 3px rgba(0,0,0,0.08)'
   });
 
   const panelStyles = {
     padding: '0',
     backgroundColor: '#ffffff',
     color: '#3c4043',
     display: 'flex',
     flexDirection: 'column',
     height: '100%',
     overflow: 'hidden'
   } as const;
 
   const bodyStyles = {
-    whiteSpace: 'pre-wrap',
     flex: 1,
     overflowY: 'auto',
     padding: '24px',
     fontFamily: 'Raleway, sans-serif',
     fontSize: '14px',
     lineHeight: '1.6',
     color: '#3c4043',
     backgroundColor: '#ffffff',
     position: 'relative',
     borderRadius: '4px',
     margin: '0 16px 16px 16px',
     border: '1px solid #e8eaed',
     boxShadow: '0 1px 3px rgba(0,0,0,0.08)'
   } as const;
 
   return (
     <Panel
       isOpen={isPreviewOpen}
       onDismiss={onDismiss}
       type={PanelType.custom}
       customWidth="50%"
       hasCloseButton={false}
       styles={{
         main: panelStyles,
         commands: { display: 'none' },
diff --git a/src/tabs/enquiries/pitch-builder/EmailPreview.tsx b/src/tabs/enquiries/pitch-builder/EmailPreview.tsx
index cff38798e6ec9a067d55f59fb7c534226ad159f1..7df4a53c756021884f026fc48610eb42820900cc 100644
--- a/src/tabs/enquiries/pitch-builder/EmailPreview.tsx
+++ b/src/tabs/enquiries/pitch-builder/EmailPreview.tsx
@@ -382,51 +393,51 @@ function formatCurrency(val?: string): string {
             }}>
               Email Content
             </span>
             <div style={{
               marginLeft: 'auto',
               padding: '2px 8px',
               backgroundColor: '#d6e8ff',
               borderRadius: '6px',
               fontSize: '10px',
               fontWeight: 500,
               color: colours.highlight
             }}>
               Preview
             </div>
           </div>
 
           <div
             ref={previewRef}
             style={{
               ...bodyStyles,
               margin: 0,
               borderTopLeftRadius: 0,
               borderTopRightRadius: 0,
               borderTop: 'none'
             }}
-            dangerouslySetInnerHTML={{ __html: finalBody }}
+            dangerouslySetInnerHTML={{ __html: previewHtml }}
           />
         </div>
 
         {/* Follow Up Section */}
         {followUp && (
           <div style={{
             margin: '0 16px',
             padding: '16px',
             backgroundColor: '#fff8e1',
             borderRadius: '4px',
             border: '1px solid #ffcc02',
             boxShadow: '0 1px 3px rgba(0,0,0,0.08)'
           }}>
             <div style={{
               fontSize: '12px',
               fontWeight: 600,
               color: '#f57f17',
               textTransform: 'uppercase',
               letterSpacing: '0.5px',
               marginBottom: '8px'
             }}>
               Follow Up Reminder
             </div>
             <div style={{
               fontSize: '14px',
diff --git a/src/tabs/enquiries/pitch-builder/EmailPreview.tsx b/src/tabs/enquiries/pitch-builder/EmailPreview.tsx
index cff38798e6ec9a067d55f59fb7c534226ad159f1..7df4a53c756021884f026fc48610eb42820900cc 100644
--- a/src/tabs/enquiries/pitch-builder/EmailPreview.tsx
+++ b/src/tabs/enquiries/pitch-builder/EmailPreview.tsx
@@ -548,51 +559,51 @@ function formatCurrency(val?: string): string {
                   }
                 }}
                 onClick={() => setIsAiOpen(true)}
                 title="Send this email to OpenAI for suggestions"
               />
             )}
             <DefaultButton
               text="Copy"
               styles={{
                 root: {
                   backgroundColor: 'white',
                   border: '1px solid #e8eaed',
                   borderRadius: '4px',
                   padding: '0 16px',
                   height: '36px',
                   fontWeight: 500,
                   color: '#5f6368'
                 },
                 rootHovered: {
                   backgroundColor: '#f8f9fa',
                   borderColor: '#dadce0'
                 }
               }}
               onClick={() => {
                 const tempDiv = document.createElement('div');
-                tempDiv.innerHTML = finalBody;
+                tempDiv.innerHTML = previewHtml;
                 navigator.clipboard.writeText(tempDiv.innerText || tempDiv.textContent || '');
               }}
               title="Copy the email preview text to your clipboard"
             />
           </div>
         </div>
 
         {/* Checkout Link */}
         <Link
           href={checkoutPreviewUrl}
           target="_blank"
           rel="noopener noreferrer"
           styles={{
             root: {
               display: 'inline-flex',
               alignItems: 'center',
               gap: '6px',
               padding: '8px 12px',
               backgroundColor: '#fff8e1',
               borderRadius: '4px',
               border: '1px solid #ffcc02',
               textDecoration: 'none',
               fontSize: '13px',
               fontWeight: 500,
               color: '#f57f17',
