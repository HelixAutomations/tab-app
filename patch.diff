diff --git a/README.md b/README.md
index 8423f20a3f9ca0c042888c158266555c52386490..3d5f6773065aa4e32a05ec1173ac079264b03ae2 100644
--- a/README.md
+++ b/README.md
@@ -72,36 +72,39 @@ Following documentation will help you to extend the React with Fluent UI templat
 - [Create multi-capability app](https://learn.microsoft.com/microsoftteams/platform/toolkit/add-capability)
 - [Use an existing Microsoft Entra application](https://learn.microsoft.com/microsoftteams/platform/toolkit/use-existing-aad-app)
 - [Customize the Teams app manifest](https://learn.microsoft.com/microsoftteams/platform/toolkit/teamsfx-preview-and-customize-app-manifest)
 - Host your app in Azure by [provision cloud resources](https://learn.microsoft.com/microsoftteams/platform/toolkit/provision) and [deploy the code to cloud](https://learn.microsoft.com/microsoftteams/platform/toolkit/deploy)
 - [Collaborate on app development](https://learn.microsoft.com/microsoftteams/platform/toolkit/teamsfx-collaboration)
 - [Set up the CI/CD pipeline](https://learn.microsoft.com/microsoftteams/platform/toolkit/use-cicd-template)
 - [Publish the app to your organization or the Microsoft Teams app store](https://learn.microsoft.com/microsoftteams/platform/toolkit/publish)
 - [Enable the app for multi-tenant](https://github.com/OfficeDev/TeamsFx/wiki/Multi-tenancy-Support-for-Azure-AD-app)
 - [Preview the app on mobile clients](https://github.com/OfficeDev/TeamsFx/wiki/Run-and-debug-your-Teams-application-on-iOS-or-Android-client)
 
 ## Server-side processing
 
 This project now includes a lightweight Express server located in the `server` directory.
 Start it locally with:
 
 ```bash
 npm run start:server
 ```
 
 When using Teams Toolkit for local debugging, the server starts automatically as
 part of `npm run dev:teamsfx`.
 
 The server exposes a `/health` endpoint for liveness checks and a `/process` endpoint
 that streams basic progress events using Server-Sent Events. This provides a foundation
 for adding real-time workflow updates after the "Submit Matter" button is pressed.
+
+Token refresh endpoints for ActiveCampaign, Clio and Asana are documented in
+[`docs/token-refresh.md`](docs/token-refresh.md).
 ## Deployment
 
 When deploying to Azure Web Apps on Windows, build the project first so that the root directory contains `index.js` and the compiled React files. The provided [build-and-deploy.ps1](build-and-deploy.ps1) script automates this by running the build, copying the server files and their dependencies along with `web.config`, and then zipping the result for deployment. Deploying the repository directly without building will result in a 500 error because IIS cannot locate `index.js` or the required Node modules.
 
 Once built you can also run the server locally using:
 
 ```bash
 npm start
 ```
 
 This starts the Express server which serves the built application from the root folder.
