diff --git a/src/tabs/instructions/Instructions.tsx b/src/tabs/instructions/Instructions.tsx
index ab7e0c03b5ab8b7900e4fc674adba054c50fa8a9..f27a39b9e3eaac5578ce16906107ccc9bcb7af57 100644
--- a/src/tabs/instructions/Instructions.tsx
+++ b/src/tabs/instructions/Instructions.tsx
@@ -562,50 +562,51 @@ const Instructions: React.FC<InstructionsProps> = ({
     gap: '16px',
     maxWidth: '1200px',
     width: '100%',
     margin: '0 auto',
     boxSizing: 'border-box',
   });
 
 
   const overviewColumnStyle = mergeStyles({
     display: 'flex',
     flexDirection: 'column',
     gap: '24px',
     maxWidth: '1200px',
     width: '100%',
     margin: '0 auto',
     boxSizing: 'border-box',
   });
 
   if (showNewMatterPage) {
     return (
       <Stack tokens={dashboardTokens} className={newMatterContainerStyle}>
         <FlatMatterOpening
           poidData={selectedInstruction ? poidData : idVerificationOptions}
           setPoidData={setPoidData}
           teamData={teamData}
+          userInitials={userInitials}
           instructionRef={selectedInstruction?.InstructionRef}
           stage={selectedInstruction?.Stage}
           clientId={selectedInstruction?.prospectId?.toString()}
           hideClientSections={!selectedInstruction}
           initialClientType={newMatterClientType}
         />
       </Stack>
     );
   }
 
   if (showRiskPage) {
     return (
       <Stack tokens={dashboardTokens} className={containerStyle}>
         <RiskAssessmentPage onBack={function (): void {
           throw new Error('Function not implemented.');
         } } />
       </Stack>
     );
   }
 
   return (
     <section className="page-section">
       <Stack tokens={dashboardTokens} className={containerStyle}>
         <div className={sectionContainerStyle(isDarkMode)}>
           {activePivot === 'overview' && (
