diff --git a/src/tabs/instructions/NewMatters.tsx b/src/tabs/instructions/NewMatters.tsx
index 7afc8d05348f46dc8fc90e5cd3055b726767f792..ad43e2fee3a04be221b2fba5700b62539860de14 100644
--- a/src/tabs/instructions/NewMatters.tsx
+++ b/src/tabs/instructions/NewMatters.tsx
@@ -217,60 +217,70 @@ const NewMatters: React.FC<NewMattersProps> = ({
         setPendingClientType(initialClientType);
     }, [initialClientType]);
     const [selectedPoidIds, setSelectedPoidIds] = useState<string[]>([]);
     const [areaOfWork, setAreaOfWork] = useState('');
     const [practiceArea, setPracticeArea] = useState('');
 
     const [description, setDescription] = useState('');
     const [folderStructure, setFolderStructure] = useState('');
     const [disputeValue, setDisputeValue] = useState('');
     // Preselect "Search" as the default value for the source field
     const [source, setSource] = useState('search');
     const [referrerName, setReferrerName] = useState('');
 
     const [opponentName, setOpponentName] = useState('');
     const [opponentEmail, setOpponentEmail] = useState('');
     const [opponentSolicitorName, setOpponentSolicitorName] = useState('');
     const [opponentSolicitorCompany, setOpponentSolicitorCompany] = useState('');
     const [opponentSolicitorEmail, setOpponentSolicitorEmail] = useState('');
     const [noConflict, setNoConflict] = useState(false);
 
     // Opponent fields
     const [opponentTitle, setOpponentTitle] = useState('');
     const [opponentFirst, setOpponentFirst] = useState('');
     const [opponentLast, setOpponentLast] = useState('');
     const [opponentPhone, setOpponentPhone] = useState('');
-    const [opponentAddress, setOpponentAddress] = useState('');
+    const [opponentHouseNumber, setOpponentHouseNumber] = useState('');
+    const [opponentStreet, setOpponentStreet] = useState('');
+    const [opponentCity, setOpponentCity] = useState('');
+    const [opponentCounty, setOpponentCounty] = useState('');
+    const [opponentPostcode, setOpponentPostcode] = useState('');
+    const [opponentCountry, setOpponentCountry] = useState('');
     const [opponentHasCompany, setOpponentHasCompany] = useState(false);
     const [opponentCompanyName, setOpponentCompanyName] = useState('');
     const [opponentCompanyNumber, setOpponentCompanyNumber] = useState('');
     // Solicitor fields
     const [solicitorTitle, setSolicitorTitle] = useState('');
     const [solicitorFirst, setSolicitorFirst] = useState('');
     const [solicitorLast, setSolicitorLast] = useState('');
     const [solicitorPhone, setSolicitorPhone] = useState('');
-    const [solicitorAddress, setSolicitorAddress] = useState('');
+    const [solicitorHouseNumber, setSolicitorHouseNumber] = useState('');
+    const [solicitorStreet, setSolicitorStreet] = useState('');
+    const [solicitorCity, setSolicitorCity] = useState('');
+    const [solicitorCounty, setSolicitorCounty] = useState('');
+    const [solicitorPostcode, setSolicitorPostcode] = useState('');
+    const [solicitorCountry, setSolicitorCountry] = useState('');
     const [solicitorCompanyNumber, setSolicitorCompanyNumber] = useState('');
 
     const [visiblePoidCount, setVisiblePoidCount] = useState(12);
     const [poidSearchTerm, setPoidSearchTerm] = useState('');
     const poidGridRef = useRef<HTMLDivElement | null>(null);
     const [activePoid, setActivePoid] = useState<POID | null>(null);
 
     const stepsOrder: StepKey[] = useMemo(() => {
         const order: StepKey[] = ['clientInfo'];
         if (!instructionRef) {
             order.push('poidSelection');
         }
         order.push(
             'areaOfWork',
             'practiceArea',
             'description',
             'disputeValue',
             'source',
             'folderStructure',
             'opponentDetails',
             'review'
         );
         return order;
     }, [instructionRef]);
 
diff --git a/src/tabs/instructions/NewMatters.tsx b/src/tabs/instructions/NewMatters.tsx
index 7afc8d05348f46dc8fc90e5cd3055b726767f792..ad43e2fee3a04be221b2fba5700b62539860de14 100644
--- a/src/tabs/instructions/NewMatters.tsx
+++ b/src/tabs/instructions/NewMatters.tsx
@@ -538,93 +548,123 @@ const NewMatters: React.FC<NewMattersProps> = ({
             case 'opponentDetails':
                 return (
                     <OpponentDetailsStep
                         opponentName={opponentName}
                         setOpponentName={setOpponentName}
                         opponentEmail={opponentEmail}
                         setOpponentEmail={setOpponentEmail}
                         opponentSolicitorName={opponentSolicitorName}
                         setOpponentSolicitorName={setOpponentSolicitorName}
                         opponentSolicitorCompany={opponentSolicitorCompany}
                         setOpponentSolicitorCompany={setOpponentSolicitorCompany}
                         opponentSolicitorEmail={opponentSolicitorEmail}
                         setOpponentSolicitorEmail={setOpponentSolicitorEmail}
                         noConflict={noConflict}
                         setNoConflict={setNoConflict}
                         disputeValue={disputeValue}
                         setDisputeValue={setDisputeValue}
                         opponentTitle={opponentTitle}
                         setOpponentTitle={setOpponentTitle}
                         opponentFirst={opponentFirst}
                         setOpponentFirst={setOpponentFirst}
                         opponentLast={opponentLast}
                         setOpponentLast={setOpponentLast}
                         opponentPhone={opponentPhone}
                         setOpponentPhone={setOpponentPhone}
-                        opponentAddress={opponentAddress}
-                        setOpponentAddress={setOpponentAddress}
+                        opponentHouseNumber={opponentHouseNumber}
+                        setOpponentHouseNumber={setOpponentHouseNumber}
+                        opponentStreet={opponentStreet}
+                        setOpponentStreet={setOpponentStreet}
+                        opponentCity={opponentCity}
+                        setOpponentCity={setOpponentCity}
+                        opponentCounty={opponentCounty}
+                        setOpponentCounty={setOpponentCounty}
+                        opponentPostcode={opponentPostcode}
+                        setOpponentPostcode={setOpponentPostcode}
+                        opponentCountry={opponentCountry}
+                        setOpponentCountry={setOpponentCountry}
                         opponentHasCompany={opponentHasCompany}
                         setOpponentHasCompany={setOpponentHasCompany}
                         opponentCompanyName={opponentCompanyName}
                         setOpponentCompanyName={setOpponentCompanyName}
                         opponentCompanyNumber={opponentCompanyNumber}
                         setOpponentCompanyNumber={setOpponentCompanyNumber}
                         solicitorTitle={solicitorTitle}
                         setSolicitorTitle={setSolicitorTitle}
                         solicitorFirst={solicitorFirst}
                         setSolicitorFirst={setSolicitorFirst}
                         solicitorLast={solicitorLast}
                         setSolicitorLast={setSolicitorLast}
                         solicitorPhone={solicitorPhone}
                         setSolicitorPhone={setSolicitorPhone}
-                        solicitorAddress={solicitorAddress}
-                        setSolicitorAddress={setSolicitorAddress}
+                        solicitorHouseNumber={solicitorHouseNumber}
+                        setSolicitorHouseNumber={setSolicitorHouseNumber}
+                        solicitorStreet={solicitorStreet}
+                        setSolicitorStreet={setSolicitorStreet}
+                        solicitorCity={solicitorCity}
+                        setSolicitorCity={setSolicitorCity}
+                        solicitorCounty={solicitorCounty}
+                        setSolicitorCounty={setSolicitorCounty}
+                        solicitorPostcode={solicitorPostcode}
+                        setSolicitorPostcode={setSolicitorPostcode}
+                        solicitorCountry={solicitorCountry}
+                        setSolicitorCountry={setSolicitorCountry}
                         solicitorCompanyNumber={solicitorCompanyNumber}
                         setSolicitorCompanyNumber={setSolicitorCompanyNumber}
                     />
                 );
             case 'review':
                 return (
                     <ReviewStep
                         selectedDate={selectedDate}
                         supervisingPartner={supervisingPartner}
                         originatingSolicitor={originatingSolicitor}
                         // fundsReceived removed
                         clientType={clientType}
                         selectedPoidIds={selectedPoidIds}
                         areaOfWork={areaOfWork}
                         practiceArea={practiceArea}
                         description={description}
                         folderStructure={folderStructure}
                         disputeValue={disputeValue}
                         source={source}
                         referrerName={referrerName}
                         opponentName={opponentName}
                         opponentEmail={opponentEmail}
                         opponentSolicitorName={opponentSolicitorName}
                         opponentSolicitorCompany={opponentSolicitorCompany}
                         opponentSolicitorEmail={opponentSolicitorEmail}
+                        opponentStreet={opponentStreet}
+                        opponentCity={opponentCity}
+                        opponentCounty={opponentCounty}
+                        opponentPostcode={opponentPostcode}
+                        opponentCountry={opponentCountry}
+                        solicitorStreet={solicitorStreet}
+                        solicitorCity={solicitorCity}
+                        solicitorCounty={solicitorCounty}
+                        solicitorPostcode={solicitorPostcode}
+                        solicitorCountry={solicitorCountry}
                         noConflict={noConflict}
                         userInitials={userInitials}
                         userData={userData}
                         onBuild={() => { }}
                     />
                 );
             default:
                 return null;
         }
     };
 
     return (
         <CompletionProvider>
         <Stack className="workflow-container">
             {!hideClientSections && (
                 <>
                     <ClientDetails stage={stage} instructionRef={instructionRef} />
                     <ClientHub
                         instructionRef={instructionRef}
                         clientId={clientId}
                         feeEarner={feeEarner}
                         idExpiry={idExpiry}
                         idVerified={false}
                         matterRef={matterRef}
                     />
