diff --git a/src/tabs/instructions/Instructions.tsx b/src/tabs/instructions/Instructions.tsx
index 4bcc509c3fec86413edd7667a5ed1e5505b4200e..55f399a21e8bc5caa066183e49cc5823b88a62ab 100644
--- a/src/tabs/instructions/Instructions.tsx
+++ b/src/tabs/instructions/Instructions.tsx
@@ -619,51 +619,55 @@ const Instructions: React.FC<InstructionsProps> = ({
           instructionRef={selectedInstruction?.InstructionRef}
           stage={selectedInstruction?.Stage}
           clientId={selectedInstruction?.prospectId?.toString()}
           hideClientSections={!selectedInstruction}
           initialClientType={newMatterClientType}
         />
       </Stack>
     );
   }
 
   if (showRiskPage) {
     return (
       <Stack tokens={dashboardTokens} className={containerStyle}>
         <RiskAssessmentPage
           onBack={() => setShowRiskPage(false)}
           instructionRef={selectedInstruction?.InstructionRef}
           riskAssessor={userInitials}
         />
       </Stack>
     );
   }
 
   if (showEIDPage) {
     return (
       <Stack tokens={dashboardTokens} className={containerStyle}>
-        <EIDCheckPage poidData={idVerificationOptions} onBack={handleBack} />
+        <EIDCheckPage
+          poidData={idVerificationOptions}
+          instruction={selectedInstruction}
+          onBack={handleBack}
+        />
       </Stack>
     );
   }
 
   return (
     <section className="page-section">
       <Stack tokens={dashboardTokens} className={containerStyle}>
         <div className={sectionContainerStyle(isDarkMode)}>
           {activePivot === "overview" && (
             <div className={overviewColumnStyle}>
               {overviewItems.map((item, idx) => {
                 const row = Math.floor(idx / 2);
                 const col = idx % 2;
                 const animationDelay = row * 0.2 + col * 0.1;
                 return (
                   <InstructionCard
                     key={idx}
                     instruction={item.instruction as any}
                     deal={(item as any).deal}
                     deals={item.deals}
                     clients={item.clients}
                     risk={(item as any).risk}
                     eid={(item as any).eid}
                     compliance={undefined}
                     documents={item.documents}
