diff --git a/src/tabs/enquiries/pitch-builder/PitchHeaderRow.tsx b/src/tabs/enquiries/pitch-builder/PitchHeaderRow.tsx
index 8097508e55e7caeaeae4603eae2e55c9e0f448c1..afb0d9713b160548550c69f0e51659e918068be3 100644
--- a/src/tabs/enquiries/pitch-builder/PitchHeaderRow.tsx
+++ b/src/tabs/enquiries/pitch-builder/PitchHeaderRow.tsx
@@ -48,89 +48,90 @@ const PitchHeaderRow: React.FC<PitchHeaderRowProps> = ({
   enquiry,
   to,
   setTo,
   cc,
   setCc,
   bcc,
   setBcc,
   subject,
   setSubject,
   serviceDescription,
   setServiceDescription,
   selectedOption,
   setSelectedOption,
   SERVICE_OPTIONS,
   amount,
   handleAmountChange,
   handleAmountBlur,
   handleDealFormSubmit,
   dealId,
   clientIds,
   isDarkMode,
 }) => {
 
   const labelColour = isDarkMode ? '#fff' : colours.darkBlue;
 
+  // Generic card style used across enquiry, email and deal sections
   const sectionStyle = {
     display: 'flex',
     flexDirection: 'column' as const,
     width: '100%',
-    padding: 16,           // more padding
-    gap: 8,                // consistent gap
-    border: `1px solid ${isDarkMode ? colours.dark.border : colours.light.border}`,
-    borderRadius: 4,       // slight rounding
+    padding: 12,
+    gap: 6,
+    border: `1px solid ${isDarkMode ? 'rgba(255,255,255,0.15)' : '#e5e5e5'}`,
+    borderRadius: 8,
     backgroundColor: isDarkMode
       ? colours.dark.sectionBackground
-      : colours.light.sectionBackground,
-  };;
+      : '#fafafa',
+  };
 
   const enquiryNotesContainer = mergeStyles(sectionStyle);
 
   const enquiryNotesHeader = mergeStyles({
     color: labelColour,
     fontWeight: 600,
     fontSize: 13,
     lineHeight: 1.2,
     marginBottom: 8,    // ↑ more breathing room under the title
   });
 
   const enquiryNotesContent = mergeStyles({
     whiteSpace: 'pre-wrap',
     fontSize: 14,
     color: labelColour,
     display: 'flex',
     flexDirection: 'column',
     gap: 4,
   });
 
   const notesContainerStyle = mergeStyles({
-    background: '#ffffff',
-    border: `1px solid ${colours.light.border}`,
-    borderRadius: 0,
+    background: isDarkMode ? colours.dark.cardBackground : '#fff',
+    border: `1px solid ${isDarkMode ? 'rgba(255,255,255,0.15)' : '#e5e5e5'}`,
+    borderRadius: 8,
     padding: 12,
     fontSize: 14,
-    boxShadow: '0 1px 3px rgba(0,0,0,0.1)',
+    boxShadow: '0 1px 2px rgba(0,0,0,0.05)',
     width: '100%',
   });
 
   const notesTextStyle = mergeStyles({
     fontFamily: 'Raleway',
   });
 
   const intakeContainer = mergeStyles(sectionStyle);
 
   const intakeHeader = mergeStyles({
     color: labelColour,
     fontWeight: 600,
     fontSize: 13,
     marginBottom: 8,    // ↑ match the enquiry title spacing
     display: 'flex',
     alignItems: 'center',
     justifyContent: 'space-between',
   });
 
   const toggleCcBccStyle = mergeStyles({
     color: colours.greyText,
     cursor: 'pointer',
     fontSize: 12,
     marginTop: 6,
     selectors: {
diff --git a/src/tabs/enquiries/pitch-builder/PitchHeaderRow.tsx b/src/tabs/enquiries/pitch-builder/PitchHeaderRow.tsx
index 8097508e55e7caeaeae4603eae2e55c9e0f448c1..afb0d9713b160548550c69f0e51659e918068be3 100644
--- a/src/tabs/enquiries/pitch-builder/PitchHeaderRow.tsx
+++ b/src/tabs/enquiries/pitch-builder/PitchHeaderRow.tsx
@@ -172,65 +173,64 @@ const PitchHeaderRow: React.FC<PitchHeaderRowProps> = ({
   const [copySuccess, setCopySuccess] = useState<string | null>(null);
 
   const copy = (text?: string) => {
     if (!text) return;
     navigator.clipboard
       .writeText(text)
       .then(() => {
         setCopySuccess('Copied!');
         setTimeout(() => setCopySuccess(null), 2000);
       })
       .catch((err) => console.error('Failed to copy: ', err));
   };
 
   // Previously aligned the subject field with the amount input using
   // calculated spacing. With the simplified layout we use static spacing
   // so this effect is no longer required.
 
   useEffect(() => {
     if (cc && !showCc) {
       setShowCc(true);
     }
   }, [cc, showCc]);
 
 
 
+  // Layout grid keeping sections compact and aligned
   const headerRowStyle = mergeStyles({
-    display: 'flex',
-    flexDirection: 'column',
-    width: '100%',
+    display: 'grid',
+    gridTemplateColumns: 'repeat(auto-fit, minmax(260px, 1fr))',
     gap: 16,
-    '@media (min-width: 768px)': {
-      flexDirection: 'row',
-    },
+    width: '100%',
   });
 
   const dealSideContainerStyle = (saved: boolean) =>
     mergeStyles({
       width: '100%',
-      border: saved ? `2px solid ${colours.green}` : 'none',
+      border: saved ? `1px solid ${colours.green}` : `1px solid transparent`,
       opacity: saved ? 0.6 : 1,
+      borderRadius: 8,
     });
 
   return (
     <Stack tokens={{ childrenGap: 16 }} styles={{ root: { width: '100%' } }}>
       <div className={headerRowStyle}>
         {/* Enquiry Details */}
         <div className={enquiryNotesContainer}>
           <div className={enquiryNotesHeader}>Enquiry Details</div>
           <Stack className={enquiryNotesContent}>
             <div className={detailRowStyle}>
               <span className={detailLabelStyle}>Name:</span>
               <span className={detailValueStyle}>
                 {enquiry.First_Name} {enquiry.Last_Name}
               </span>
               <IconButton
                 iconProps={{ iconName: 'Copy' }}
                 styles={{ root: { background: 'none', padding: 0 } }}
                 ariaLabel="Copy Name"
                 onClick={() =>
                   copy(`${enquiry.First_Name ?? ''} ${enquiry.Last_Name ?? ''}`.trim())
                 }
               />
             </div>
             {enquiry.Email && (
               <div className={detailRowStyle}>
