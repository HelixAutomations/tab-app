diff --git a/src/tabs/enquiries/pitch-builder/EmailPreview.tsx b/src/tabs/enquiries/pitch-builder/EmailPreview.tsx
index 7df4a53c756021884f026fc48610eb42820900cc..2ba035cacdec4ac589c9a5c5df7718114bd8aaf7 100644
--- a/src/tabs/enquiries/pitch-builder/EmailPreview.tsx
+++ b/src/tabs/enquiries/pitch-builder/EmailPreview.tsx
@@ -108,59 +108,52 @@ const EmailPreview: React.FC<EmailPreviewProps> = ({
   isDraftConfirmed,
   amount,
   passcode,
 }) => {
   // Strip blocks auto inserted by the system unless edited
   // Disabled for now since we want content to display by default
   const withoutAutoBlocks = body;
   
   // Generate checkout URL first
   const checkoutPreviewUrl = passcode && enquiry?.ID
     ? `https://instruct.helix-law.com/pitch/${enquiry.ID}-${passcode}`
     : '#';
   
   // Process body HTML using imported functions
   const sanitized = removeHighlightSpans(withoutAutoBlocks);
   const substituted = applyDynamicSubstitutions(
     sanitized,
     userData,
     enquiry,
     amount,
     passcode,
     checkoutPreviewUrl
   );
   const highlightedBody = markUnfilledPlaceholders(substituted, templateBlocks);
   const finalBody = convertDoubleBreaksToParagraphs(highlightedBody);
-  const wrappedBody = `<table width="100%" border="0" cellpadding="0" cellspacing="0" style="border-collapse:collapse;">
-    <tr>
-      <td style="padding:10px; font-family:Raleway, sans-serif; font-size:10pt; color:#000;">
-        ${finalBody}
-      </td>
-    </tr>
-  </table>`;
   const previewHtml = ReactDOMServer.renderToStaticMarkup(
-    <EmailSignature bodyHtml={wrappedBody} userData={userData} />
+    <EmailSignature bodyHtml={finalBody} userData={userData} />
   );
 const previewRef = React.useRef<HTMLDivElement>(null);
 
   const [isAiOpen, setIsAiOpen] = React.useState(false);
   const [isConfirmed, setIsConfirmed] = React.useState(false);
   React.useEffect(() => {
     if (isPreviewOpen) {
       setIsConfirmed(false);
     }
   }, [isPreviewOpen]);
   const inTeams = isInTeams();
   const useLocalData =
     process.env.REACT_APP_USE_LOCAL_DATA === 'true' || !inTeams;
   const allowedInitials = ['LZ', 'AC'];
   const userInitials = userData?.[0]?.Initials?.toUpperCase() || '';
   const canUseAi = useLocalData || allowedInitials.includes(userInitials);
   const showAiAssistButton = false;
 
   // Example follow-up options (you may wish to pass these in or centralise them)
   const followUpOptions: { [key: string]: string } = {
     '1_day': '1 day',
     '2_days': '2 days',
     '3_days': '3 days',
     '7_days': '7 days',
     '14_days': '14 days',
