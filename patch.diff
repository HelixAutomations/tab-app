diff --git a/src/tabs/instructions/RiskComplianceCard.tsx b/src/tabs/instructions/RiskComplianceCard.tsx
index 83bad0cbcbed9c459427f62a7e0cd0c798aaa345..ad1d971dfe0d8b81f311bb61dea86d3851b51369 100644
--- a/src/tabs/instructions/RiskComplianceCard.tsx
+++ b/src/tabs/instructions/RiskComplianceCard.tsx
@@ -1,77 +1,101 @@
 import React from 'react';
 // invisible change 2
 //
 import { mergeStyles, Text } from '@fluentui/react';
 import { useTheme } from '../../app/functionality/ThemeContext';
 import { colours } from '../../app/styles/colours';
 import { componentTokens } from '../../app/styles/componentTokens';
 import '../../app/styles/RiskComplianceCard.css';
+import { ClientInfo } from './JointClientCard';
 
 interface RiskComplianceCardProps {
     data: any;
     animationDelay?: number;
     onOpenInstruction?: () => void;
+    clients?: ClientInfo[];
 }
 
 const getField = (obj: any, ...keys: string[]) => {
     for (const key of keys) {
         const val = obj?.[key];
         if (val !== undefined && val !== null) return val;
     }
     return undefined;
 };
 
 const RiskComplianceCard: React.FC<RiskComplianceCardProps> = ({
     data,
     animationDelay = 0,
     onOpenInstruction,
+    clients,
 }) => {
     const { isDarkMode } = useTheme();
 
     const cardClass = mergeStyles('riskComplianceCard', {
         backgroundColor: isDarkMode ? colours.dark.sectionBackground : colours.light.sectionBackground,
         color: isDarkMode ? colours.dark.text : colours.light.text,
         padding: componentTokens.card.base.padding,
         borderRadius: componentTokens.card.base.borderRadius,
         boxShadow: componentTokens.card.base.boxShadow,
         cursor: onOpenInstruction ? 'pointer' : 'default',
         transition: 'box-shadow 0.3s ease, transform 0.3s ease',
         selectors: {
             ':hover': {
                 boxShadow: componentTokens.card.hover.boxShadow,
                 transform: componentTokens.card.hover.transform,
             },
         },
     });
 
     const style: React.CSSProperties = { '--animation-delay': `${animationDelay}s` } as React.CSSProperties;
 
     const complianceDate = getField(data, 'ComplianceDate', 'Compliance Date');
     const complianceExpiry = getField(data, 'ComplianceExpiry', 'Compliance Expiry');
     const date = complianceDate ? new Date(complianceDate).toLocaleDateString() : undefined;
     const expiry = complianceExpiry ? new Date(complianceExpiry).toLocaleDateString() : undefined;
 
     return (
         <div className={cardClass} style={style} onClick={onOpenInstruction}>
             <Text variant="mediumPlus" styles={{ root: { fontWeight: 600 } }}>
                 {data.MatterId}
             </Text>
             {data.ServiceDescription && <Text variant="small">{data.ServiceDescription}</Text>}
             {data.Stage && <Text variant="small">Stage: {data.Stage}</Text>}
             <dl className="data-grid">
                 {Object.entries(data).map(([k, v]) => (
                     <React.Fragment key={k}>
                         <dt>{k}</dt>
                         <dd>
                             {Array.isArray(v) || typeof v === 'object'
                                 ? JSON.stringify(v)
                                 : String(v)}
                         </dd>
                     </React.Fragment>
                 ))}
             </dl>
+            {clients && clients.length > 0 && (
+                <div style={{ marginTop: 8 }}>
+                    <Text variant="small" styles={{ root: { fontWeight: 600 } }}>
+                        Clients
+                    </Text>
+                    <ul className="detail-list">
+                        {clients.map((c, idx) => (
+                            <li key={idx} style={{ fontSize: '0.85rem' }}>
+                                {c.ClientEmail}
+                                {c.HasSubmitted !== undefined && (
+                                    <>
+                                        {' '}-{' '}
+                                        {c.HasSubmitted ? 'submitted' : 'pending'}
+                                    </>
+                                )}
+                                {c.Lead && ' (lead)'}
+                            </li>
+                        ))}
+                    </ul>
+                </div>
+            )}
         </div>
     );
 };
 
 export default RiskComplianceCard;
