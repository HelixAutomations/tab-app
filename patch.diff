diff --git a/src/tabs/instructions/RiskAssessmentPage.tsx b/src/tabs/instructions/RiskAssessmentPage.tsx
index 811f84fac87427f6201e448f3b2bbeacb07481ff..2b84540b6354304a2ce61f57e99a47ddf2815921 100644
--- a/src/tabs/instructions/RiskAssessmentPage.tsx
+++ b/src/tabs/instructions/RiskAssessmentPage.tsx
@@ -1,29 +1,30 @@
 import React, { useState } from 'react';
 import { Stack, PrimaryButton } from '@fluentui/react';
 import RiskAssessment, { RiskCore } from '../../components/RiskAssessment';
 import { dashboardTokens } from './componentTokens';
+import '../../app/styles/NewMatters.css';
 
 interface RiskAssessmentPageProps {
     onBack: () => void;
     instructionRef?: string;
     riskAssessor?: string;
     /** Existing risk assessment data to display when available */
     existingRisk?: any | null;
 }
 
 const RiskAssessmentPage: React.FC<RiskAssessmentPageProps> = ({ onBack, instructionRef, riskAssessor, existingRisk }) => {
     const [riskCore, setRiskCore] = useState<RiskCore>({
         clientType: existingRisk?.ClientType ?? '',
         clientTypeValue: existingRisk?.ClientType_Value ?? 0,
         destinationOfFunds: existingRisk?.DestinationOfFunds ?? '',
         destinationOfFundsValue: existingRisk?.DestinationOfFunds_Value ?? 0,
         fundsType: existingRisk?.FundsType ?? '',
         fundsTypeValue: existingRisk?.FundsType_Value ?? 0,
         clientIntroduced: existingRisk?.HowWasClientIntroduced ?? '',
         clientIntroducedValue: existingRisk?.HowWasClientIntroduced_Value ?? 0,
         limitation: existingRisk?.Limitation ?? '',
         limitationValue: existingRisk?.Limitation_Value ?? 0,
         sourceOfFunds: existingRisk?.SourceOfFunds ?? '',
         sourceOfFundsValue: existingRisk?.SourceOfFunds_Value ?? 0,
         valueOfInstruction: existingRisk?.ValueOfInstruction ?? '',
         valueOfInstructionValue: existingRisk?.ValueOfInstruction_Value ?? 0,
diff --git a/src/tabs/instructions/RiskAssessmentPage.tsx b/src/tabs/instructions/RiskAssessmentPage.tsx
index 811f84fac87427f6201e448f3b2bbeacb07481ff..2b84540b6354304a2ce61f57e99a47ddf2815921 100644
--- a/src/tabs/instructions/RiskAssessmentPage.tsx
+++ b/src/tabs/instructions/RiskAssessmentPage.tsx
@@ -104,62 +105,64 @@ const RiskAssessmentPage: React.FC<RiskAssessmentPageProps> = ({ onBack, instruc
                     HowWasClientIntroduced: riskCore.clientIntroduced,
                     HowWasClientIntroduced_Value: riskCore.clientIntroducedValue,
                     Limitation: riskCore.limitation,
                     Limitation_Value: riskCore.limitationValue,
                     SourceOfFunds: riskCore.sourceOfFunds,
                     SourceOfFunds_Value: riskCore.sourceOfFundsValue,
                     ValueOfInstruction: riskCore.valueOfInstruction,
                     ValueOfInstruction_Value: riskCore.valueOfInstructionValue,
                     TransactionRiskLevel: transactionRiskLevel,
                     ClientRiskFactorsConsidered: consideredClientRisk,
                     TransactionRiskFactorsConsidered: consideredTransactionRisk,
                     FirmWideSanctionsRiskConsidered: consideredFirmWideSanctions,
                     FirmWideAMLPolicyConsidered: consideredFirmWideAML,
                     RiskScore: riskScore,
                     RiskScoreIncrementBy: riskScore,
                     RiskAssessmentResult: riskResult,
                 }),
             });
         } catch (err) {
             console.error('‚ùå Risk assessment submit failed', err);
         }
         onBack();
     };
 
     return (
-        <Stack tokens={dashboardTokens}>
+        <Stack tokens={dashboardTokens} className="workflow-container">
             <PrimaryButton text="Back" onClick={onBack} style={{ marginBottom: 16 }} />
-            {existingRisk && (
-                <Stack tokens={{ childrenGap: 8 }} styles={{ root: { marginBottom: 20 } }}>
-                    <h3>Existing Assessment</h3>
-                    <ul className="detail-list">
-                        {Object.entries(existingRisk).map(([k, v]) => (
-                            v != null ? <li key={k}><strong>{k}:</strong> {String(v)}</li> : null
-                        ))}
-                    </ul>
-                </Stack>
-            )}
-            <RiskAssessment
-                riskCore={riskCore}
-                setRiskCore={setRiskCore}
-                complianceDate={complianceDate}
-                setComplianceDate={setComplianceDate}
-                complianceExpiry={complianceExpiry}
-                setComplianceExpiry={setComplianceExpiry}
-                consideredClientRisk={consideredClientRisk}
-                setConsideredClientRisk={setConsideredClientRisk}
-                consideredTransactionRisk={consideredTransactionRisk}
-                setConsideredTransactionRisk={setConsideredTransactionRisk}
-                transactionRiskLevel={transactionRiskLevel}
-                setTransactionRiskLevel={setTransactionRiskLevel}
-                consideredFirmWideSanctions={consideredFirmWideSanctions}
-                setConsideredFirmWideSanctions={setConsideredFirmWideSanctions}
-                consideredFirmWideAML={consideredFirmWideAML}
-                setConsideredFirmWideAML={setConsideredFirmWideAML}
-                onContinue={handleContinue}
-                isComplete={isComplete}
-            />
+            <div className="workflow-main">
+                {existingRisk && (
+                    <Stack tokens={{ childrenGap: 8 }} styles={{ root: { marginBottom: 20 } }}>
+                        <h3>Existing Assessment</h3>
+                        <ul className="detail-list">
+                            {Object.entries(existingRisk).map(([k, v]) => (
+                                v != null ? <li key={k}><strong>{k}:</strong> {String(v)}</li> : null
+                            ))}
+                        </ul>
+                    </Stack>
+                )}
+                <RiskAssessment
+                    riskCore={riskCore}
+                    setRiskCore={setRiskCore}
+                    complianceDate={complianceDate}
+                    setComplianceDate={setComplianceDate}
+                    complianceExpiry={complianceExpiry}
+                    setComplianceExpiry={setComplianceExpiry}
+                    consideredClientRisk={consideredClientRisk}
+                    setConsideredClientRisk={setConsideredClientRisk}
+                    consideredTransactionRisk={consideredTransactionRisk}
+                    setConsideredTransactionRisk={setConsideredTransactionRisk}
+                    transactionRiskLevel={transactionRiskLevel}
+                    setTransactionRiskLevel={setTransactionRiskLevel}
+                    consideredFirmWideSanctions={consideredFirmWideSanctions}
+                    setConsideredFirmWideSanctions={setConsideredFirmWideSanctions}
+                    consideredFirmWideAML={consideredFirmWideAML}
+                    setConsideredFirmWideAML={setConsideredFirmWideAML}
+                    onContinue={handleContinue}
+                    isComplete={isComplete}
+                />
+            </div>
         </Stack>
     );
 };
 
 export default RiskAssessmentPage;
