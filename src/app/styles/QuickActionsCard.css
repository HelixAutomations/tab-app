/* Quick Actions Card - Simple Static Display (No Hover Effects) */

/* Cascading animation for quick action items */
@keyframes quickActionCascade {
  from {
    opacity: 0;
    transform: translateX(-10px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

.quickActionCard {
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
  flex: 0 0 auto; /* prevent stretch/grow on small screens */
  height: 38px;
  border-radius: 6px;
  cursor: pointer;
  /* Smooth transitions for all states */
  transition: transform 140ms ease, background-color 160ms ease, color 140ms ease, opacity 140ms ease, width 300ms ease, gap 300ms ease;
  background: var(--card-bg, transparent);
  border: none; /* Remove individual borders */
  padding: 0 10px;
  width: 40px;
  min-width: 40px;
  gap: 0;
  overflow: hidden;
  box-shadow: none; /* Remove individual shadows */
}

.quickActionCard.light-mode .quick-action-label {
  color: #1F2937;
}

.quickActionCard.dark-mode .quick-action-label {
  color: #E5E7EB;
}

.quickActionCard.dark-mode.show-label .quick-action-label,
.quickActionCard.dark-mode.labels-locked:hover .quick-action-label,
.quickActionCard.dark-mode.labels-locked.hovered .quick-action-label,
.quickActionCard.dark-mode.always-show-text .quick-action-label {
  color: #F3F4F6 !important;
}

.quickActionCard.dark-mode .quick-action-icon {
  color: rgba(255, 255, 255, 0.7);
  opacity: 0.7;
}

.quickActionCard.dark-mode.show-label .quick-action-icon,
.quickActionCard.dark-mode.labels-locked:hover .quick-action-icon,
.quickActionCard.dark-mode.labels-locked.hovered .quick-action-icon,
.quickActionCard.dark-mode.always-show-text .quick-action-icon {
  color: rgba(255, 255, 255, 0.85);
  opacity: 1;
}



/* Keep expanded when panel is active or when this specific card opened a panel */
.quickActionCard.panel-active,
.quickActionCard.selected {
  width: auto;
  min-width: 120px;
  gap: 8px;
  justify-content: flex-start;
  transition-delay: 0s;
  background-color: var(--card-selected, rgba(54, 144, 206, 0.12));
}

.quickActionCard::after {
  content: '';
  position: absolute;
  bottom: 0;
  left: 12px;
  right: 12px;
  height: 2px;
  background-color: #3690CE;
  transform: scaleX(0);
  transition: transform 0.3s ease;
  border-radius: 1px;
}

/* Only apply width/gap transitions on hover if not in persistent show-label mode */
.quickActionCard:hover:not(.show-label),
.quickActionCard.hovered:not(.show-label) {
  background-color: var(--card-hover, rgba(54, 144, 206, 0.08));
  width: auto;
  min-width: 120px;
  gap: 8px;
  transition-delay: 0s;
  transition: transform 140ms ease, background-color 160ms ease, color 140ms ease, opacity 140ms ease, width 200ms ease, gap 200ms ease;
  transform: translateY(-1px);
  border-radius: 4px;
  justify-content: flex-start;
}

/* For cards in show-label mode, only apply visual hover effects without changing layout */
.quickActionCard.show-label:hover,
.quickActionCard.show-label.hovered {
  background-color: var(--card-hover, rgba(54, 144, 206, 0.08));
  transform: translateY(-1px);
  border-radius: 4px;
  transition: transform 140ms ease, background-color 160ms ease, color 140ms ease;
}

.quickActionCard.light-mode:hover .quick-action-icon,
.quickActionCard.light-mode.hovered .quick-action-icon,
.quickActionCard.light-mode:hover .quick-action-label,
.quickActionCard.light-mode.hovered .quick-action-label {
  color: #3690CE !important; /* Blue highlight on hover for icons and text */
}

.quickActionCard.dark-mode:hover .quick-action-icon,
.quickActionCard.dark-mode.hovered .quick-action-icon,
.quickActionCard.dark-mode:hover .quick-action-label,
.quickActionCard.dark-mode.hovered .quick-action-label {
  color: #7DD3FC !important;
}

.quickActionCard.selected::after {
  transform: scaleX(1);
}

/* Also show the underline on hover for feedback */
.quickActionCard:hover::after,
.quickActionCard.hovered::after {
  transform: scaleX(1);
}

/* When labels are locked (insufficient width), keep icon-only even on hover */
.quickActionCard.labels-locked {
  width: 40px !important;
  min-width: 40px !important;
  gap: 0 !important;
}

.quickActionCard.labels-locked .quick-action-label {
  opacity: 0 !important;
  width: 0 !important;
}

/* When labels are locked but hovered, reveal temporarily */
.quickActionCard.labels-locked:hover,
.quickActionCard.labels-locked.hovered {
  background-color: var(--card-hover, rgba(54, 144, 206, 0.08));
  /* Expand on hover to reveal label for clarity */
  width: auto !important;
  min-width: 120px !important;
  gap: 8px !important;
  transform: translateY(-1px);
  justify-content: flex-start !important;
}

.quickActionCard.labels-locked:hover .quick-action-label,
.quickActionCard.labels-locked.hovered .quick-action-label {
  opacity: 1 !important;
  width: auto !important;
}

/* Icon container - subtle styling */
.quick-action-icon {
  position: relative;
  width: 20px;
  height: 20px;
  flex-shrink: 0;
  color: #eee;
  opacity: 0.4;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: color 0.3s ease, opacity 0.3s ease;
}

/* Show outline icons by default, hide filled icons */
.icon-outline {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  opacity: 1;
  color: inherit;
  display: block;
  transition: opacity 0.3s ease;
}

.icon-filled {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  opacity: 0;
  color: inherit;
  display: block;
  transition: opacity 0.3s ease;
}

/* On hover/selected, show filled icons and hide outline icons */
.quickActionCard:hover .icon-outline,
.quickActionCard.selected .icon-outline {
  opacity: 0;
}

.quickActionCard:hover .icon-filled,
.quickActionCard.selected .icon-filled {
  opacity: 1;
}

/* Label - hidden by default, revealed on hover or when always-show-text */
.quick-action-label {
  font-size: 13px; /* Match immediate actions */
  font-weight: 500; /* Match immediate actions */
  white-space: nowrap;
  color: inherit;
  opacity: 0;
  width: 0;
  overflow: hidden;
  /* Smooth transitions for label show/hide */
  transition: opacity 300ms ease, width 300ms ease;
}

.quickActionCard:hover .quick-action-label,
.quickActionCard.hovered .quick-action-label {
  opacity: 1 !important;
  width: auto !important;
  transition-delay: 0s;
}

/* Show labels when panel is active or card is selected */
.quickActionCard.panel-active .quick-action-label,
.quickActionCard.selected .quick-action-label {
  opacity: 1;
  width: auto;
  transition-delay: 0s;
}

/* Show label when there's space - this is the persistent expanded state */
.quickActionCard.show-label {
  width: auto !important;
  min-width: 120px !important;
  gap: 8px !important;
  justify-content: flex-start !important;
  /* Smooth transitions for expanding to show-label state */
  transition: transform 140ms ease, background-color 160ms ease, color 140ms ease, opacity 140ms ease, width 300ms ease, gap 300ms ease;
}

.quickActionCard.show-label .quick-action-label {
  opacity: 1 !important;
  width: auto !important;
  /* Smooth transition for label appearance */
  transition: opacity 300ms ease 150ms, width 300ms ease 150ms !important;
  font-weight: 500 !important;
  font-size: 13px !important;
}

.quickActionCard.always-show-text .quick-action-label {
  opacity: 1 !important;
  width: auto !important;
  transition-delay: 0s !important;
  font-weight: 500 !important; /* Match immediate actions font weight */
  font-size: 13px !important; /* Match immediate actions font size */
}

/* Extra specificity rule to ensure it overrides everything */
div.quickActionCard.always-show-text.light-mode span.quick-action-label {
  color: #000000 !important;
  font-weight: 500 !important;
  font-size: 13px !important;
}

div.quickActionCard.always-show-text.dark-mode span.quick-action-label {
  color: #F3F4F6 !important;
  font-weight: 500 !important;
  font-size: 13px !important;
}



.quickActionCard.always-show-text .quick-action-icon {
  opacity: 0.8; /* Less washed out */
}

/* Show outline icons by default, even when always-show-text is active */
.quickActionCard.always-show-text .icon-outline {
  opacity: 1;
}

.quickActionCard.always-show-text .icon-filled {
  opacity: 0;
}

/* On hover when always-show-text, enhance the styling */
.quickActionCard.always-show-text:hover .quick-action-icon,
.quickActionCard.always-show-text.selected .quick-action-icon {
  color: #3690CE;
  opacity: 1;
}

/* Show filled icons on hover/selected */
.quickActionCard.always-show-text:hover .icon-outline,
.quickActionCard.always-show-text.selected .icon-outline {
  opacity: 0;
}

.quickActionCard.always-show-text:hover .icon-filled,
.quickActionCard.always-show-text.selected .icon-filled {
  opacity: 1;
}

.quickActionCard.always-show-text:hover .quick-action-label,
.quickActionCard.always-show-text.selected .quick-action-label {
  color: #3690CE;
}

.quickActionCard.light-mode:hover .quick-action-label,
.quickActionCard.light-mode.selected .quick-action-label {
  color: #3690CE;
  opacity: 1;
}

.quickActionCard.light-mode:hover .quick-action-icon,
.quickActionCard.light-mode.selected .quick-action-icon {
  color: #3690CE;
  opacity: 1;
}

.quickActionCard.light-mode.panel-active .quick-action-label {
  color: #3690CE;
}

.quickActionCard.light-mode.panel-active .quick-action-icon {
  color: #3690CE;
  opacity: 1;
}

.quickActionCard.dark-mode:hover .quick-action-label,
.quickActionCard.dark-mode.selected .quick-action-label {
  color: #7DD3FC;
  opacity: 1;
}

.quickActionCard.dark-mode:hover .quick-action-icon,
.quickActionCard.dark-mode.selected .quick-action-icon {
  color: #93C5FD;
  opacity: 1;
}

.quickActionCard.dark-mode.panel-active .quick-action-label {
  color: #7DD3FC;
}

.quickActionCard.dark-mode.panel-active .quick-action-icon {
  color: #93C5FD;
  opacity: 1;
}

/* Focus states */
.quickActionCard:focus-visible {
  outline: 2px solid #3690CE;
  outline-offset: 2px;
}

/* Disabled state */
.quickActionCard:disabled {
  opacity: 0.4;
  cursor: not-allowed;
}

.quickActionCard:disabled:hover {
  background-color: transparent;
}

/* Dark mode */
@media (prefers-color-scheme: dark) {
  .quick-action-icon {
    color: #333;
    opacity: 0.4;
  }
  
  .quick-action-label {
    color: #e5e7eb; /* improve dark-mode readability */
  }
  
  .quickActionCard.always-show-text .quick-action-label {
    color: #e5e7eb !important; /* Better contrast in dark mode */
  }
  
  .quickActionCard:hover .quick-action-label,
  .quickActionCard.selected .quick-action-label {
    color: #4DA6E0;
  }
  
  .quickActionCard:hover .quick-action-icon,
  .quickActionCard.selected .quick-action-icon {
    color: #4DA6E0;
    opacity: 1;
  }

  .quickActionCard::after {
    background-color: #4DA6E0;
  }
}

/* Vertical layout support */
.quickActionCard.vertical {
  flex-direction: column;
  height: auto;
  padding: 12px;
  width: auto;
  gap: 4px;
  min-width: 80px;
}

.quickActionCard.vertical .quick-action-label {
  font-size: 12px;
  text-align: center;
}

/* Responsive */
@media (max-width: 900px) {
  .quickActionCard {
    min-width: 40px;
    padding: 0 8px;
  }
  
  .quick-action-label {
    font-size: 13px;
  }
}

@media (max-width: 600px) {
  .quickActionCard {
    min-width: 40px;
    padding: 0 8px;
    height: 36px;
    gap: 6px;
  }
  
  .quick-action-icon {
    width: 18px;
    height: 18px;
  }
  
  .icon-filled {
    width: 18px;
    height: 18px;
  }
  
  .quick-action-label {
    font-size: 12px;
  }
}